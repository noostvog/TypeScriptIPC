tests/cases/compiler/ifElseWithStatements2inheritance.ts(9,11): error TS2430: Interface 'PrivateMessage' incorrectly extends interface 'PrivateMessage2'.
  Invalid assignment of type PrivateMessage tot type PrivateMessage2. Check if predicates are correct
tests/cases/compiler/ifElseWithStatements2inheritance.ts(19,1): error TS95009: Cannot access userid from the object because its interface does not contain the predicate present(userid). Use a non-undefined type guard.
tests/cases/compiler/ifElseWithStatements2inheritance.ts(20,1): error TS95009: Cannot access screenname from the object because its interface does not contain the predicate present(screenname). Use a non-undefined type guard.
tests/cases/compiler/ifElseWithStatements2inheritance.ts(24,5): error TS2322: Type '"Alice"' is not assignable to type 'undefined'.
tests/cases/compiler/ifElseWithStatements2inheritance.ts(26,5): error TS2322: Type '45' is not assignable to type 'undefined'.
tests/cases/compiler/ifElseWithStatements2inheritance.ts(30,1): error TS95009: Cannot access userid from the object because its interface does not contain the predicate present(userid). Use a non-undefined type guard.
tests/cases/compiler/ifElseWithStatements2inheritance.ts(31,1): error TS95009: Cannot access screenname from the object because its interface does not contain the predicate present(screenname). Use a non-undefined type guard.


==== tests/cases/compiler/ifElseWithStatements2inheritance.ts (7 errors) ====
    interface PrivateMessage2 {
        text?: string;
        userid?: number;
    } constrains {
        present(text);
    
    }
    
    interface PrivateMessage extends PrivateMessage2 {
              ~~~~~~~~~~~~~~
!!! error TS2430: Interface 'PrivateMessage' incorrectly extends interface 'PrivateMessage2'.
!!! error TS2430:   Invalid assignment of type PrivateMessage tot type PrivateMessage2. Check if predicates are correct
        // inherit properties
        screenname?: string;
    } constrains {
        or(and(present(userid), not(present(screenname))),
        and(not(present(userid)), present(screenname)));
    }
    
    let pm: PrivateMessage = {text: "Hi!", userid: 42};
    
    pm.userid = 43; // NOK
    ~~~~~~~~~
!!! error TS95009: Cannot access userid from the object because its interface does not contain the predicate present(userid). Use a non-undefined type guard.
    pm.screenname = "Alice"; //NOK
    ~~~~~~~~~~~~~
!!! error TS95009: Cannot access screenname from the object because its interface does not contain the predicate present(screenname). Use a non-undefined type guard.
    
    if (pm.userid) {
        pm.userid = 44; //OK
        pm.screenname = "Alice"; //NOK
        ~~~~~~~~~~~~~
!!! error TS2322: Type '"Alice"' is not assignable to type 'undefined'.
    } else {
        pm.userid = 45; //NOK
        ~~~~~~~~~
!!! error TS2322: Type '45' is not assignable to type 'undefined'.
        pm.screenname = "Alice"; //OK
    }
    
    pm.userid = 46; //NOK
    ~~~~~~~~~
!!! error TS95009: Cannot access userid from the object because its interface does not contain the predicate present(userid). Use a non-undefined type guard.
    pm.screenname = "Alice"; //NOK
    ~~~~~~~~~~~~~
!!! error TS95009: Cannot access screenname from the object because its interface does not contain the predicate present(screenname). Use a non-undefined type guard.